import { useState } from "react";
import {
  Box,
  Typography,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Avatar,
  createTheme,
  useMediaQuery,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import CheckCircleIcon from "@mui/icons-material/CheckCircle";
import Header from "../header";
import { useNavigate } from "react-router-dom";
import MenuList from "../burgerMenu/menuList";

export default function TreatmentPlanPage() {
  const navigate = useNavigate();
  const theme = createTheme({
    breakpoints: {
      values: {
        xs: 0,
        sm: 300,
        md: 500,
        lg: 1200,
        xl: 1600,
      },
    },
  });
  const isDesktop = useMediaQuery(theme.breakpoints.up("md"));
  const [, setSharedHeight] = useState<number | null>(null);

  const plans = [
    {
      date: "12.04.2025",
      done: ["12.04 ‚Äì –õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞ –∑—É–±–∞ 2.6 ‚Äì 4 500 ‚ÇΩ"],
      planned: [
        "15 –º–∞—è (—Å—Ä–µ–¥–∞), 10:30",
        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–æ–º–±—ã (–∑—É–± 2.6)",
        "–í—Ä–∞—á: –†–∏–Ω–∞—Ç –õ–µ–æ–Ω–∏–¥–æ–≤–∏—á",
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: 3 200 ‚ÇΩ",
        "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 40 –º–∏–Ω—É—Ç",
      ],
      notes: [
        "20 –º–∞—è (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫), 11:00",
        "–ì–∏–≥–∏–µ–Ω–∏—á–µ—Å–∫–∞—è —á–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤",
        "–í—Ä–∞—á: –†–∏–Ω–∞—Ç –õ–µ–æ–Ω–∏–¥–æ–≤–∏—á",
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: 3 000 ‚ÇΩ",
        "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 –º–∏–Ω—É—Ç",
        "–í–∫–ª—é—á–∞–µ—Ç Air Flow –∏ —Ñ—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ",
      ],
      doctor: { name: "–†–∏–Ω–∞—Ç –õ–µ–æ–Ω–∏–¥–æ–≤–∏—á", title: "–¢–µ—Ä–∞–ø–µ–≤—Ç" },
    },
    {
      date: "12.04.2024",
      done: ["12.04 ‚Äì –£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞ 1.4 ‚Äì 2 000 ‚ÇΩ"],
      planned: [],
      notes: ["–ü–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω"],
    },
    {
      date: "27.08.2024",
      done: ["27.08 ‚Äì –ü–ª–æ–º–±–∏—Ä–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–∞ 3.6 ‚Äì 3 500 ‚ÇΩ"],
      planned: [],
      notes: ["–ü–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω"],
    },
  ];

  const secMenuItem = [
    {
      id: 1,
      specialist: "–û–Ω–ª–∞–π–Ω –∑–∞–ø–∏—Å—å",
      services: [
        "–ù–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é –¥–∞—Ç—É",
        "–ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É",
        "–ù–∞ —É—Å–ª—É–≥—É",
        "–ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å",
      ],
    },
  ];

  return (
    <Box
      sx={{
        width: isDesktop ? "50dvh" : "100vw",
        maxWidth: 800,
        mx: "auto",
        minHeight: "100vh",
        display: "flex",
        flexDirection: "column",
        backgroundColor: "#FFFFFF",
      }}
    >
      <Header />

      <Box
        sx={{
          flex: 1,
          px: 2,
          display: "flex",
          flexDirection: "column",
          alignItems: "center",
        }}
      >
        <Typography
          variant="h6"
          gutterBottom
          sx={{ mt: "20px", fontSize: "24px" }}
        >
          <Box component="span" sx={{ color: "#0077FF", fontWeight: 700 }}>
            –í–ê–® –ü–õ–ê–ù{" "}
          </Box>
          <Box component="span" sx={{ fontWeight: 500, color: "#0077FF" }}>
            –õ–ï–ß–ï–ù–ò–Ø
          </Box>
        </Typography>

        <div
          className="divider"
          style={{ marginTop: "20px", marginBottom: "30px" }}
        ></div>

        {plans.map((plan, idx) => {
          const isFirst = idx === 0;
          const bg = isFirst ? "#0077FF" : "#989898";
          return (
            <Accordion
              key={plan.date}
              defaultExpanded={isFirst}
              sx={{
                width: "100%",
                backgroundColor: bg,
                color: "#fff",
                borderRadius: "20px",
                mb: 2,
                "&:before": { display: "none" },
              }}
            >
              <AccordionSummary
                expandIcon={
                  <ExpandMoreIcon sx={{ color: "#fff", minHeight: "70px" }} />
                }
                sx={{
                  px: 2,
                  py: isFirst ? 1 : 1.3,
                  borderRadius: isFirst ? "20px 20px 0 0" : "20px",
                  "& .MuiAccordionSummary-content": { margin: 0 },
                }}
              >
                <Typography
                  sx={{ fontWeight: 700, textTransform: "uppercase" }}
                >
                  {plan.date} ‚Äì –ü–õ–ê–ù –õ–ï–ß–ï–ù–ò–Ø
                </Typography>
              </AccordionSummary>

              <AccordionDetails
                sx={{
                  p: 2,
                  bgcolor: bg,
                  color: "#fff",
                  borderRadius: "0 0 20px 20px",
                }}
              >
                {plan.done && plan.done.length > 0 && (
                  <>
                    <Typography
                      sx={{
                        display: "flex",
                        alignItems: "center",
                        fontWeight: 700,
                        mb: 1,
                      }}
                    >
                      <CheckCircleIcon sx={{ mr: 1, color: "lightgreen" }} />
                      –ß—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ:
                    </Typography>
                    <Box component="ul" sx={{ pl: 3, m: 0 }}>
                      {plan.done.map((item, i) => (
                        <Typography component="li" key={i}>
                          {item}
                        </Typography>
                      ))}
                    </Box>
                  </>
                )}

                {plan.planned && plan.planned.length > 0 && (
                  <>
                    <Typography sx={{ fontWeight: 700, mt: 2, mb: 1 }}>
                      üìÖ–ß—Ç–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ:
                    </Typography>
                    <Box component="ul" sx={{ pl: 3, m: 0 }}>
                      {plan.planned.map((item, i) => (
                        <Typography component="li" key={i}>
                          {item}
                        </Typography>
                      ))}
                    </Box>
                  </>
                )}

                {plan.notes && plan.notes.length > 0 && (
                  <>
                    <Typography sx={{ fontWeight: 700, mt: 2, mb: 1 }}>
                      –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
                    </Typography>
                    <Box component="ul" sx={{ pl: 3, m: 0, mb: 2 }}>
                      {plan.notes.map((item, i) => (
                        <Typography component="li" key={i}>
                          {item}
                        </Typography>
                      ))}
                    </Box>
                  </>
                )}

                {plan.doctor && (
                  <Box
                    sx={{
                      p: 1,
                      backgroundColor: "#fff",
                      borderRadius: "8px",
                      display: "flex",
                      alignItems: "center",
                      gap: 1,
                    }}
                  >
                    <Avatar sx={{ width: 32, height: 32 }} />
                    <Box>
                      <Typography sx={{ fontWeight: 700, color: "#000" }}>
                        {plan.doctor.name}
                      </Typography>
                      <Typography sx={{ fontSize: 12, color: "#000" }}>
                        {plan.doctor.title}
                      </Typography>
                    </Box>
                  </Box>
                )}
              </AccordionDetails>
            </Accordion>
          );
        })}

        {secMenuItem.map((item, index) => (
          <MenuList
            key={index}
            specialist={{ name: item.specialist, id: item.id }}
            services={item.services}
            currentId={item.id}
            setSyncedHeight={setSharedHeight}
          />
        ))}
      </Box>

      <Box
        sx={{
          padding: "0 16px 20px",
          display: "flex",
          flexDirection: "column",
          alignItems: "center",
          gap: "16px",
          background: "#FFFFFF",
        }}
      >
        <div
          className="divider"
          style={{ marginTop: "20px", marginBottom: "10px" }}
        ></div>
        <Box sx={{ display: "flex", justifyContent: "center", gap: "10px" }}>
          <button
            className="round-button"
            onClick={() => window.open("https://t.me/denta_rell", "_blank")}
          />
          <button
            className="round-button"
            onClick={() =>
              window.open(
                "https://api.whatsapp.com/send/?phone=79178585217&text=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!%0A%0A–ü–∏—à—É+–∏–∑+–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.%0A%0A&type=phone_number&app_absent=0",
                "_blank"
              )
            }
          />
          <button
            className="write-button"
            onClick={() => navigate("/client/chat")}
          >
            –ù–ê–ü–ò–°–ê–¢–¨
          </button>
        </Box>
      </Box>
    </Box>
  );
}
