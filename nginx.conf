# HTTP-блок: раздача фронта и прокси для API
server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Прокси всех запросов, начинающихся с /api/, на бэкенд
    location /api/ {
        proxy_pass         http://host.docker.internal:4000;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Статика фронта
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Кеш для статических ассетов
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|otf|svg|webp)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public";
    }

    error_page 404 /index.html;
}

# HTTPS-блок: та же логика + SSL
server {
    listen      443 ssl http2;
    server_name _;

    root        /usr/share/nginx/html;
    index       index.html;

    # Прокси API под HTTPS
    location /api/ {
        proxy_pass         http://host.docker.internal:4000;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Статика фронта
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Кеш для статических файлов
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|otf|svg|webp)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public";
    }

    error_page 404 /index.html;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
}
